<?php
class ParserFactory
{
  private static $extensionToClassSuffix = [
    "am" => ["am", "հայ"],
    "ar" => ["ar"],
    "as" => ["as"],
    "at" => ["at"],
    "aw" => ["aw", "nl"],
    "ax" => ["ax"],
    "bb" => ["bb"],
    "be" => ["be"],
    "bg" => ["bg", "бг"],
    "bn" => ["bn"],
    "bo" => ["bo"],
    "br" => ["br"],
    "bt" => ["bt"],
    "caco" => ["co.ca"],
    "cl" => ["cl"],
    "cn" => ["cn", "中国", "中國"],
    "cr" => ["cr"],
    "cz" => ["cz"],
    "dk" => ["dk", "tj"],
    "ee" => ["ee"],
    "eu" => ["eu", "ευ", "ею"],
    "fi" => ["fi"],
    "fr" => ["fr", "pm", "re", "tf", "wf", "yt"],
    "ga" => ["ga", "sn"],
    "gf" => ["gf"],
    "gg" => ["gg"],
    "gm" => ["gm"],
    "gt" => ["gt"],
    "gw" => ["gw"],
    "hk" => ["hk", "香港"],
    "hm" => ["hm"],
    "id" => ["id"],
    "il" => ["il", "ישראל"],
    "im" => ["im"],
    "it" => ["it"],
    "je" => ["je"],
    "jp" => ["jp"],
    "kg" => ["kg"],
    "kr" => ["kr", "한국"],
    "kz" => ["kz", "қаз"],
    "ls" => ["ls"],
    "lt" => ["lt"],
    "lu" => ["lu"],
    "lv" => ["lv"],
    "md" => ["md"],
    "mk" => ["mk", "мкд"],
    "mo" => ["mo", "澳門"],
    "mq" => ["mq"],
    "mt" => ["mt"],
    "mw" => ["mw"],
    "mx" => ["mx"],
    "nc" => ["nc"],
    "netza" => ["za.net", "za.org"],
    "no" => ["no"],
    "np" => ["np"],
    "pf" => ["pf"],
    "ph" => ["ph"],
    "pl" => ["pl"],
    "plco" => ["co.pl"],
    "pt" => ["pt"],
    "qa" => ["qa", "قطر"],
    "ro" => ["ro", "uz"],
    "rs" => ["rs", "срб"],
    "ru" => ["ru", "su", "рф", "net.ru", "org.ru", "pp.ru"],
    "sa" => ["sa", "السعودية"],
    "sk" => ["sk"],
    "sm" => ["sm"],
    "st" => ["st"],
    "sv" => ["sv"],
    "tg" => ["tg"],
    "tm" => ["tm"],
    "tn" => ["tn", "تونس"],
    "tr" => ["tr"],
    "tt" => ["tt"],
    "tw" => ["tw", "台湾", "台灣"],
    "tz" => ["tz"],
    "ua" => ["ua"],
    "ua1" => ["укр"],
    "uk" => ["uk"],
    "ukac" => ["ac.uk"],
    "uz" => ["uz", "co.uz", "com.uz", "net.uz", "org.uz"],
    "ve" => ["ve"],
  ];

  public static function create($extension, $data): Parser
  {
    foreach (self::$extensionToClassSuffix as $classSuffix => $extensions) {
      $class = "Parser" . strtoupper($classSuffix);
      if (in_array(strtolower($extension), $extensions) && class_exists($class)) {
        return new $class($data);
      }
    }

    return new Parser($data);
  }
}
